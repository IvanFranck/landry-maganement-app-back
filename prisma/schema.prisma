// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int     @id @default(autoincrement())
  username        String  @db.VarChar(255)
  phone           Int     @unique
  password        String  @db.VarChar(255)
  signUpCompleted Boolean @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  OTPCode   OTPCode[]
}

model OTPCode {
  id        Int      @id @default(autoincrement())
  code      Int
  createdAt DateTime @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Customer {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(255)
  phone    Int       @unique
  address  String?   @db.VarChar(255)
  commands Command[]
}

model Service {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  label       String             @unique
  price       Int
  description String?
  commands    ServiceOnCommand[]
}

model Command {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  price       Int
  description String? @db.VarChar(255)
  discount    Int?
  customerId  Int

  services ServiceOnCommand[]
  customer Customer           @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model ServiceOnCommand {
  quantity  Int
  serviceId Int
  commandId Int

  service Service @relation(fields: [serviceId], references: [id])
  command Command @relation(fields: [commandId], references: [id], onDelete: Cascade)

  @@id([serviceId, commandId])
}
